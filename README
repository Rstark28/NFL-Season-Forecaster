Here's an improved version of your README file with better formatting, additional details, and clearer instructions:

---

# NFL Simulation

## Overview

NFL Simulation is a comprehensive program that simulates NFL games and entire seasons, allowing users to create teams, simulate matches, and track a variety of statistics across multiple simulated seasons. This simulation uses Elo ratings to dynamically adjust team performance based on game outcomes.

## Features

- **Team Creation & Management**: Set up and manage NFL teams, including custom teams.
- **Game Simulation**: Simulate individual games with dynamic outcomes based on team ratings.
- **Season Simulation**: Simulate full NFL seasons or run multi-season simulations.
- **Statistics Tracking**: Keep track of player and team stats across multiple seasons.
- **Elo Rating System**: Uses an Elo-based rating system to predict and adjust team performance.

## Installation

1. **Clone the repository**:
   ```sh
   git clone https://github.com/Rstark28/NFLSim.git
   ```
2. **Navigate to the project directory**:
   ```sh
   cd NFLSim
   ```
3. **Build the project** using `make`:
   ```sh
   make
   ```

## Usage

1. **Run the simulation**:
   ```sh
   ./sim schedule.csv
   ```
   Here, `schedule.csv` contains the schedule for the games you want to simulate.
   
2. **Follow the on-screen instructions** to create teams, simulate games, and view statistics.

### Available Commands (Query Loop)

Within the query loop of the simulation, you can enter the following commands to interact with the system:

- `update`: Manually update a specific game.
- `simulate_season [n]`: Simulate an entire NFL season, with the option to repeat for `n` seasons.
- `exit`: Exit the simulation.

### Simulation Mechanics

The simulation uses **Elo ratings** to determine the outcomes of games. Each team is assigned an initial Elo rating, which is adjusted based on the results of each simulated game. This system predicts the probability of victory based on team ratings and updates them to reflect performance changes over time. The simulation also factors in score differentials and other parameters to fine-tune the ratings after each game.

## Contribution Guidelines

We welcome contributions from the community! To contribute:

1. Fork the repository.
2. Create a new branch for your feature or bug fix:
   ```sh
   git checkout -b feature-branch-name
   ```
3. Commit your changes:
   ```sh
   git commit -m "Description of the feature/fix"
   ```
4. Push to your fork and submit a pull request.

Feel free to open an issue for suggestions or to report bugs.
